services:
  backend:
    image: rabent0207/final-penet-backend:latest  # build 대신 image
    container_name: spring-backend
    environment:
      - SPRING_PROFILES_ACTIVE=local
      - SERVER_PORT=8080
      - DB_HOST=172.31.45.114
      - DB_PORT=3306
      - DB_NAME=ssafy
      - DB_USERNAME=ssafy
      - DB_PASSWORD=ssafy
      - JWT_KEY=${JWT_KEY}
      - API_KEY=${API_KEY}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOW}
    env_file:
      - .env
    volumes:
      - gradle-cache:/root/.gradle
    restart: always
    networks:
      - app-network

  frontend:
    image: rabent0207/final-penet-frontend:latest  # build 대신 image
    container_name: vue-frontend
    restart: always
    ports:
      - "80:8080"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
    networks:
      - app-network

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app-network
    healthcheck:
      # 포트 체크
      test: ["CMD-SHELL", "netstat -an | grep :9090 | grep LISTEN || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s


  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - app-network
    healthcheck:
      # 포트 체크
      test: ["CMD-SHELL", "netstat -an | grep :3000 | grep LISTEN || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  gradle-cache:

networks:
  app-network:
    driver: bridge
