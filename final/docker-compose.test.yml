# docker-compose.yml
version: '3'

services:
  app-build:
    build:
      context: ./backend
      dockerfile: Backend/Dockerfile
    image: my-spring-app:latest
    profiles:
      - build-only  # 이 서비스는 기본적으로 시작되지 않음

  # 앱 1
  app1:
    image: my-spring-app:latest
    container_name: spring-app1
    ports:
      - "8081:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - JAVA_OPTS=-Xms128m -Xmx256m
    deploy:
      resources:
        limits:
          memory: 600M
          cpus: '0.5'
    networks:
      - spring-network

  # 앱 2
  app2:
    image: my-spring-app:latest
    container_name: spring-app2
    ports:
      - "8082:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - JAVA_OPTS=-Xms128m -Xmx256m
    deploy:
      resources:
        limits:
          memory: 600M
          cpus: '0.5'
    networks:
      - spring-network

  # 앱 3
  app3:
    image: my-spring-app:latest
    container_name: spring-app3
    ports:
      - "8083:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - JAVA_OPTS=-Xms128m -Xmx256m
    deploy:
      resources:
        limits:
          memory: 600M
          cpus: '0.5'
    networks:
      - spring-network

  # 앱 4
  app4:
    image: my-spring-app:latest
    container_name: spring-app4
    ports:
      - "8084:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - JAVA_OPTS=-Xms128m -Xmx256m
    deploy:
      resources:
        limits:
          memory: 600M
          cpus: '0.5'
    networks:
      - spring-network

  # 앱 5
  app5:
    image: my-spring-app:latest
    container_name: spring-app5
    ports:
      - "8085:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - JAVA_OPTS=-Xms128m -Xmx256m
    deploy:
      resources:
        limits:
          memory: 600M
          cpus: '0.5'
    networks:
      - spring-network

  # 앱 6
  app6:
    image: my-spring-app:latest
    container_name: spring-app6
    ports:
      - "8086:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - JAVA_OPTS=-Xms128m -Xmx256m
    deploy:
      resources:
        limits:
          memory: 600M
          cpus: '0.5'
    networks:
      - spring-network

  # 앱 7
  app7:
    image: my-spring-app:latest
    container_name: spring-app7
    ports:
      - "8087:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - JAVA_OPTS=-Xms128m -Xmx256m
    deploy:
      resources:
        limits:
          memory: 600M
          cpus: '0.5'
    networks:
      - spring-network

  # 앱 8
  app8:
    image: my-spring-app:latest
    container_name: spring-app8
    ports:
      - "8088:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - JAVA_OPTS=-Xms128m -Xmx256m
    deploy:
      resources:
        limits:
          memory: 600M
          cpus: '0.5'
    networks:
      - spring-network

  # 앱 9
  app9:
    image: my-spring-app:latest
    container_name: spring-app9
    ports:
      - "8089:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - JAVA_OPTS=-Xms128m -Xmx256m
    deploy:
      resources:
        limits:
          memory: 600M
          cpus: '0.5'
    networks:
      - spring-network

  frontend:
    build:
      context: ./frontend/final-front
    container_name: vue-frontend
    restart: always
    ports:
      - "8080:8080"
    volumes:
      - ./frontend/final-front/nginx.test.conf:/etc/nginx/nginx.conf # Nginx 설정 마운트
    depends_on:
      - app1
      - app2
      - app3
      - app4
      - app5
      - app6
      - app7
      - app8
      - app9
    networks:
      - spring-network

networks:
  spring-network:
    driver: bridge